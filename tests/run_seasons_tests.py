#!/usr/bin/env python3
import os
import sys
import time
from datetime import datetime, timezone, timedelta
from math import modf, ceil, floor
from zoneinfo import ZoneInfo

sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from exodus_calendar.utils import (
    get_solar_longitude_angle, 
    mars_datetime_to_solar_longitude_angle,
    mars_datetime_to_earth_datetime,
)

from exodus_calendar.utils import (
    DAY_LENGTH, 
    SOL_LENGTH, 
    EPOCH,
)


# First year
TEST_DATA_A = [
    ["0001-01-01 00:00:00.000", "0001-02-05 21:19:00.000", 30.0],
    ["0001-01-01 00:00:00.000", "0001-03-15 07:35:00.000", 60.0],
    ["0001-01-01 00:00:00.000", "0001-04-26 00:30:00.000", 90.0],
    ["0001-01-01 00:00:00.000", "0001-05-34 11:42:00.000", 120.0],
    ["0001-01-01 00:00:00.000", "0001-06-38 04:45:00.000", 150.0],
    ["0001-01-01 00:00:00.000", "0001-07-36 11:10:00.000", 180.0],
    ["0001-01-01 00:00:00.000", "0001-08-30 03:59:00.000", 210.0],
    ["0001-01-01 00:00:00.000", "0001-09-21 00:43:00.000", 240.0],
    ["0001-01-01 00:00:00.000", "0001-10-11 03:06:00.000", 270.0],
    ["0001-01-01 00:00:00.000", "0001-11-02 14:21:00.000", 300.0],
    ["0001-01-01 00:00:00.000", "0001-11-53 10:45:00.000", 330.0],
    ["0001-01-01 00:00:00.000", "0001-12-53 05:36:00.000", 0.0],
]

TEST_DATA_B = [
    ["0038-01-01 00:00:00.000", "0038-02-06 16:10:00.000", 30.0],
    ["0038-01-01 00:00:00.000", "0038-03-16 01:35:00.000", 60.0],
    ["0038-01-01 00:00:00.000", "0038-04-26 18:53:00.000", 90.0],
    ["0038-01-01 00:00:00.000", "0038-05-35 07:20:00.000", 120.0],
    ["0038-01-01 00:00:00.000", "0038-06-39 02:00:00.000", 150.0],
    ["0038-01-01 00:00:00.000", "0038-07-37 09:58:00.000", 180.0],
    ["0038-01-01 00:00:00.000", "0038-08-31 03:57:00.000", 210.0],
    ["0038-01-01 00:00:00.000", "0038-09-22 01:20:00.000", 240.0],
    ["0038-01-01 00:00:00.000", "0038-10-12 03:40:00.000", 270.0],
    ["0038-01-01 00:00:00.000", "0038-11-03 14:15:00.000", 300.0],
    ["0038-01-01 00:00:00.000", "0038-11-54 09:23:00.000", 330.0],
    ["0038-01-01 00:00:00.000", "0039-01-02 02:28:00.000", 0.0],
]

TEST_DATA_D = [
    ["0639-01-01 00:00:00.000", "0639-02-04 12:00:00.000", 30.0],
    ["0639-01-01 00:00:00.000", "0639-03-13 04:35:00.000", 60.0],
    ["0639-01-01 00:00:00.000", "0639-04-24 02:11:00.000", 90.0],
    ["0639-01-01 00:00:00.000", "0639-05-33 13:47:00.000", 120.0],
    ["0639-01-01 00:00:00.000", "0639-06-38 16:41:00.000", 150.0],
    ["0639-01-01 00:00:00.000", "0639-07-38 07:16:00.000", 180.0],
    ["0639-01-01 00:00:00.000", "0639-08-32 23:25:00.000", 210.0],
    ["0639-01-01 00:00:00.000", "0639-09-24 07:25:00.000", 240.0],
    ["0639-01-01 00:00:00.000", "0639-10-14 07:52:00.000", 270.0],
    ["0639-01-01 00:00:00.000", "0639-11-05 03:59:00.000", 300.0],
    ["0639-01-01 00:00:00.000", "0639-11-54 21:28:00.000", 330.0],
    ["0639-01-01 00:00:00.000", "0639-12-53 05:54:00.000", 0.0],
]


def seasons_test():
    print("Running season dates tests")
    for i in range(0, len(TEST_DATA_A),1):
        Ls_1 = mars_datetime_to_solar_longitude_angle(TEST_DATA_A[i][1], True)
        assert(Ls_1==TEST_DATA_A[i][2])
        

    for i in range(0, len(TEST_DATA_B),1):
        Ls_1 = mars_datetime_to_solar_longitude_angle(TEST_DATA_B[i][1], True)
        assert(Ls_1==TEST_DATA_B[i][2])


    for i in range(0, len(TEST_DATA_D),1):
        Ls_1 = mars_datetime_to_solar_longitude_angle(TEST_DATA_D[i][1], True)
        assert(Ls_1==TEST_DATA_D[i][2])

    ms_since_unix_epoch = 1757996838621
    assert(get_solar_longitude_angle(ms_since_unix_epoch)==140.66896191469732)
    print("Finished season dates tests")